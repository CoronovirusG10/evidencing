{"version":3,"file":"static/chunks/609-985e197704b0c02f.js","mappings":"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","sources":["webpack://_N_E/?38e8","webpack://_N_E/./components/CustomInput.tsx","webpack://_N_E/./components/AuthForm.tsx","webpack://_N_E/./components/PlaidLink.tsx","webpack://_N_E/./components/ui/button.tsx","webpack://_N_E/./components/ui/label.tsx","webpack://_N_E/./components/ui/form.tsx","webpack://_N_E/./components/ui/input.tsx","webpack://_N_E/./lib/feature-flags.ts","webpack://_N_E/./lib/utils.ts"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/kaveh/Horizon-bank/banking/components/AuthForm.tsx\");\n","import React from 'react'\nimport { FormControl, FormField, FormLabel, FormMessage } from './ui/form'\nimport { Input } from './ui/input'\n\nimport { Control, FieldPath } from 'react-hook-form'\nimport { z } from 'zod'\nimport { authFormSchema } from '@/lib/utils'\n\nconst formSchema = authFormSchema('sign-up')\n\ninterface CustomInput {\n  control: Control<z.infer<typeof formSchema>>,\n  name: FieldPath<z.infer<typeof formSchema>>,\n  label: string,\n  placeholder: string\n}\n\nconst CustomInput = ({ control, name, label, placeholder }: CustomInput) => {\n  return (\n    <FormField\n      control={control}\n      name={name}\n      render={({ field }) => (\n        <div className=\"form-item\">\n          <FormLabel className=\"form-label\">\n            {label}\n          </FormLabel>\n          <div className=\"flex w-full flex-col\">\n            <FormControl>\n              <Input \n                placeholder={placeholder}\n                className=\"input-class\"\n                type={name === 'password' ? 'password' : 'text'}\n                {...field}\n              />\n            </FormControl>\n            <FormMessage className=\"form-message mt-2\" />\n          </div>\n        </div>\n      )}\n    />\n  )\n}\n\nexport default CustomInput","'use client';\n\nimport Image from 'next/image'\nimport Link from 'next/link'\nimport React, { useState } from 'react'\n\nimport { z } from \"zod\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { useForm } from \"react-hook-form\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\"\nimport { Input } from \"@/components/ui/input\"\nimport CustomInput from './CustomInput';\nimport { authFormSchema } from '@/lib/utils';\nimport { Loader2 } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport { getLoggedInUser, signIn, signUp } from '@/lib/actions/user.actions';\nimport PlaidLink from './PlaidLink';\n\nconst AuthForm = ({ type }: { type: string }) => {\n  const router = useRouter();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const formSchema = authFormSchema(type);\n\n    // 1. Define your form.\n    const form = useForm<z.infer<typeof formSchema>>({\n      resolver: zodResolver(formSchema),\n      defaultValues: {\n        email: \"\",\n        password: ''\n      },\n    })\n   \n    // 2. Define a submit handler.\n    const onSubmit = async (data: z.infer<typeof formSchema>) => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        // Sign up with Appwrite & create plaid token\n        \n        if(type === 'sign-up') {\n          const userData = {\n            firstName: data.firstName!,\n            lastName: data.lastName!,\n            address1: data.address1!,\n            city: data.city!,\n            state: data.state!,\n            postalCode: data.postalCode!,\n            dateOfBirth: data.dateOfBirth!,\n            ssn: data.ssn!,\n            email: data.email,\n            password: data.password\n          }\n\n          const response = await signUp(userData);\n\n          if(!response?.success) {\n            setError(response?.error ?? 'Sign up failed. Please try again.');\n            return;\n          }\n\n          setUser(response.data);\n        }\n\n        if(type === 'sign-in') {\n          const response = await signIn({\n            email: data.email,\n            password: data.password,\n          })\n\n          if(!response?.success) {\n            setError(response?.error ?? 'Sign in failed. Please try again.');\n            return;\n          }\n\n          router.push('/')\n        }\n      } catch (error) {\n        console.log(error);\n        setError('Something went wrong. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n  return (\n    <section className=\"auth-form\">\n      <header className='flex flex-col gap-5 md:gap-8'>\n          <Link href=\"/\" className=\"cursor-pointer flex items-center gap-1\">\n            <Image \n              src=\"/icons/logo.svg\"\n              width={34}\n              height={34}\n              alt=\"Horizon logo\"\n            />\n            <h1 className=\"text-26 font-ibm-plex-serif font-bold text-black-1\">Horizon</h1>\n          </Link>\n\n          <div className=\"flex flex-col gap-1 md:gap-3\">\n            <h1 className=\"text-24 lg:text-36 font-semibold text-gray-900\">\n              {user \n                ? 'Link Account'\n                : type === 'sign-in'\n                  ? 'Sign In'\n                  : 'Sign Up'\n              }\n              <p className=\"text-16 font-normal text-gray-600\">\n                {user \n                  ? 'Link your account to get started'\n                  : 'Please enter your details'\n                }\n              </p>  \n            </h1>\n          </div>\n      </header>\n      {user ? (\n        <div className=\"flex flex-col gap-4\">\n          <PlaidLink user={user} variant=\"primary\" />\n        </div>\n      ): (\n        <>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n              {type === 'sign-up' && (\n                <>\n                  <div className=\"flex gap-4\">\n                    <CustomInput control={form.control} name='firstName' label=\"First Name\" placeholder='Enter your first name' />\n                    <CustomInput control={form.control} name='lastName' label=\"Last Name\" placeholder='Enter your first name' />\n                  </div>\n                  <CustomInput control={form.control} name='address1' label=\"Address\" placeholder='Enter your specific address' />\n                  <CustomInput control={form.control} name='city' label=\"City\" placeholder='Enter your city' />\n                  <div className=\"flex gap-4\">\n                    <CustomInput control={form.control} name='state' label=\"State\" placeholder='Example: NY' />\n                    <CustomInput control={form.control} name='postalCode' label=\"Postal Code\" placeholder='Example: 11101' />\n                  </div>\n                  <div className=\"flex gap-4\">\n                    <CustomInput control={form.control} name='dateOfBirth' label=\"Date of Birth\" placeholder='YYYY-MM-DD' />\n                    <CustomInput control={form.control} name='ssn' label=\"SSN\" placeholder='Example: 1234' />\n                  </div>\n                </>\n              )}\n\n              <CustomInput control={form.control} name='email' label=\"Email\" placeholder='Enter your email' />\n\n              <CustomInput control={form.control} name='password' label=\"Password\" placeholder='Enter your password' />\n\n              <div className=\"flex flex-col gap-4\">\n                <Button type=\"submit\" disabled={isLoading} className=\"form-btn\">\n                  {isLoading ? (\n                    <>\n                      <Loader2 size={20} className=\"animate-spin\" /> &nbsp;\n                      Loading...\n                    </>\n                  ) : type === 'sign-in' \n                    ? 'Sign In' : 'Sign Up'}\n                </Button>\n                {error && (\n                  <p className=\"text-14 text-red-500\" role=\"alert\">{error}</p>\n                )}\n              </div>\n            </form>\n          </Form>\n\n          <footer className=\"flex justify-center gap-1\">\n            <p className=\"text-14 font-normal text-gray-600\">\n              {type === 'sign-in'\n              ? \"Don't have an account?\"\n              : \"Already have an account?\"}\n            </p>\n            <Link href={type === 'sign-in' ? '/sign-up' : '/sign-in'} className=\"form-link\">\n              {type === 'sign-in' ? 'Sign up' : 'Sign in'}\n            </Link>\n          </footer>\n        </>\n      )}\n    </section>\n  )\n}\n\nexport default AuthForm\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Button } from './ui/button'\nimport { PlaidLinkOnSuccess, PlaidLinkOptions, usePlaidLink } from 'react-plaid-link'\nimport { useRouter } from 'next/navigation';\nimport { createLinkToken, exchangePublicToken } from '@/lib/actions/user.actions';\nimport Image from 'next/image';\nimport { isPlaidEnabled } from '@/lib/feature-flags';\n\nconst PlaidLink = ({ user, variant }: PlaidLinkProps) => {\n  const router = useRouter();\n  const [token, setToken] = useState('');\n  const plaidEnabled = useMemo(() => isPlaidEnabled(), []);\n\n  useEffect(() => {\n    if (!plaidEnabled) return;\n\n    const getLinkToken = async () => {\n      const data = await createLinkToken(user);\n\n      setToken(data?.linkToken);\n    }\n\n    getLinkToken();\n  }, [user, plaidEnabled]);\n\n  const onSuccess = useCallback<PlaidLinkOnSuccess>(async (public_token: string) => {\n    await exchangePublicToken({\n      publicToken: public_token,\n      user,\n    })\n\n    router.push('/');\n  }, [user, router])\n\n  const config: PlaidLinkOptions = {\n    token,\n    onSuccess\n  }\n\n  const { open, ready } = usePlaidLink(config);\n  \n  if (!plaidEnabled) {\n    if (variant === 'primary') {\n      return (\n        <div className=\"rounded-lg border border-brand-100 bg-white p-4 text-sm text-gray-600\">\n          Plaid connections are temporarily unavailable. You can continue by adding manual transactions or contact support to enable automated syncing.\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  return (\n    <>\n      {variant === 'primary' ? (\n        <Button\n          onClick={() => open()}\n          disabled={!ready}\n          className=\"plaidlink-primary\"\n        >\n          Connect bank\n        </Button>\n      ): variant === 'ghost' ? (\n        <Button onClick={() => open()} variant=\"ghost\" className=\"plaidlink-ghost\">\n          <Image \n            src=\"/icons/connect-bank.svg\"\n            alt=\"connect bank\"\n            width={24}\n            height={24}\n          />\n          <p className='hiddenl text-[16px] font-semibold text-black-2 xl:block'>Connect bank</p>\n        </Button>\n      ): (\n        <Button onClick={() => open()} className=\"plaidlink-default\">\n          <Image \n            src=\"/icons/connect-bank.svg\"\n            alt=\"connect bank\"\n            width={24}\n            height={24}\n          />\n          <p className='text-[16px] font-semibold text-black-2'>Connect bank</p>\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default PlaidLink\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  ControllerProps,\n  FieldPath,\n  FieldValues,\n  FormProvider,\n  useFormContext,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message) : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","const parseFlag = (value: string | undefined, defaultValue: boolean) => {\n  if (value === undefined || value === null) return defaultValue;\n\n  switch (value.toLowerCase()) {\n    case '1':\n    case 'true':\n    case 'yes':\n    case 'on':\n      return true;\n    case '0':\n    case 'false':\n    case 'no':\n    case 'off':\n      return false;\n    default:\n      return defaultValue;\n  }\n};\n\nexport const isPlaidEnabled = () =>\n  parseFlag(process.env.NEXT_PUBLIC_ENABLE_PLAID ?? process.env.ENABLE_PLAID, true);\n\nexport const isTransfersEnabled = () =>\n  parseFlag(process.env.NEXT_PUBLIC_ENABLE_TRANSFERS ?? process.env.ENABLE_TRANSFERS, true);\n\nexport const getFeatureFlags = () => ({\n  plaid: isPlaidEnabled(),\n  transfers: isTransfersEnabled(),\n});\n","/* eslint-disable no-prototype-builtins */\nimport { type ClassValue, clsx } from \"clsx\";\nimport qs from \"query-string\";\nimport { twMerge } from \"tailwind-merge\";\nimport { z } from \"zod\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// FORMAT DATE TIME\nexport const formatDateTime = (dateString: Date) => {\n  const dateTimeOptions: Intl.DateTimeFormatOptions = {\n    weekday: \"short\", // abbreviated weekday name (e.g., 'Mon')\n    month: \"short\", // abbreviated month name (e.g., 'Oct')\n    day: \"numeric\", // numeric day of the month (e.g., '25')\n    hour: \"numeric\", // numeric hour (e.g., '8')\n    minute: \"numeric\", // numeric minute (e.g., '30')\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\n  };\n\n  const dateDayOptions: Intl.DateTimeFormatOptions = {\n    weekday: \"short\", // abbreviated weekday name (e.g., 'Mon')\n    year: \"numeric\", // numeric year (e.g., '2023')\n    month: \"2-digit\", // abbreviated month name (e.g., 'Oct')\n    day: \"2-digit\", // numeric day of the month (e.g., '25')\n  };\n\n  const dateOptions: Intl.DateTimeFormatOptions = {\n    month: \"short\", // abbreviated month name (e.g., 'Oct')\n    year: \"numeric\", // numeric year (e.g., '2023')\n    day: \"numeric\", // numeric day of the month (e.g., '25')\n  };\n\n  const timeOptions: Intl.DateTimeFormatOptions = {\n    hour: \"numeric\", // numeric hour (e.g., '8')\n    minute: \"numeric\", // numeric minute (e.g., '30')\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\n  };\n\n  const formattedDateTime: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    dateTimeOptions\n  );\n\n  const formattedDateDay: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    dateDayOptions\n  );\n\n  const formattedDate: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    dateOptions\n  );\n\n  const formattedTime: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    timeOptions\n  );\n\n  return {\n    dateTime: formattedDateTime,\n    dateDay: formattedDateDay,\n    dateOnly: formattedDate,\n    timeOnly: formattedTime,\n  };\n};\n\nexport function formatAmount(amount: number): string {\n  return formatCurrency(amount);\n}\n\nexport const parseStringify = (value: any) => JSON.parse(JSON.stringify(value));\n\nexport const formatCurrency = (value: number, currency = 'USD') => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n  }).format(value);\n};\n\nexport const removeSpecialCharacters = (value: string) => {\n  return value.replace(/[^\\w\\s]/gi, \"\");\n};\n\ninterface UrlQueryParams {\n  params: string;\n  key: string;\n  value: string;\n}\n\nexport function formUrlQuery({ params, key, value }: UrlQueryParams) {\n  const currentUrl = qs.parse(params);\n\n  currentUrl[key] = value;\n\n  return qs.stringifyUrl(\n    {\n      url: window.location.pathname,\n      query: currentUrl,\n    },\n    { skipNull: true }\n  );\n}\n\nexport function getAccountTypeColors(type: AccountTypes) {\n  switch (type) {\n    case \"depository\":\n      return {\n        bg: \"bg-blue-25\",\n        lightBg: \"bg-blue-100\",\n        title: \"text-blue-900\",\n        subText: \"text-blue-700\",\n      };\n\n    case \"credit\":\n      return {\n        bg: \"bg-success-25\",\n        lightBg: \"bg-success-100\",\n        title: \"text-success-900\",\n        subText: \"text-success-700\",\n      };\n\n    default:\n      return {\n        bg: \"bg-green-25\",\n        lightBg: \"bg-green-100\",\n        title: \"text-green-900\",\n        subText: \"text-green-700\",\n      };\n  }\n}\n\nexport function countTransactionCategories(\n  transactions: Transaction[]\n): CategoryCount[] {\n  const categoryCounts: { [category: string]: number } = {};\n  let totalCount = 0;\n\n  // Iterate over each transaction\n  transactions &&\n    transactions.forEach((transaction) => {\n      // Extract the category from the transaction\n      const category = transaction.category;\n\n      // If the category exists in the categoryCounts object, increment its count\n      if (categoryCounts.hasOwnProperty(category)) {\n        categoryCounts[category]++;\n      } else {\n        // Otherwise, initialize the count to 1\n        categoryCounts[category] = 1;\n      }\n\n      // Increment total count\n      totalCount++;\n    });\n\n  // Convert the categoryCounts object to an array of objects\n  const aggregatedCategories: CategoryCount[] = Object.keys(categoryCounts).map(\n    (category) => ({\n      name: category,\n      count: categoryCounts[category],\n      totalCount,\n    })\n  );\n\n  // Sort the aggregatedCategories array by count in descending order\n  aggregatedCategories.sort((a, b) => b.count - a.count);\n\n  return aggregatedCategories;\n}\n\nexport function extractCustomerIdFromUrl(url: string) {\n  // Split the URL string by '/'\n  const parts = url.split(\"/\");\n\n  // Extract the last part, which represents the customer ID\n  const customerId = parts[parts.length - 1];\n\n  return customerId;\n}\n\nexport function encryptId(id: string) {\n  return btoa(id);\n}\n\nexport function decryptId(id: string) {\n  return atob(id);\n}\n\nexport const getTransactionStatus = (date: Date) => {\n  const today = new Date();\n  const twoDaysAgo = new Date(today);\n  twoDaysAgo.setDate(today.getDate() - 2);\n\n  return date > twoDaysAgo ? \"Processing\" : \"Success\";\n};\n\nexport const authFormSchema = (type: string) => z.object({\n  // sign up\n  firstName: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  lastName: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  address1: type === 'sign-in' ? z.string().optional() : z.string().max(50),\n  city: type === 'sign-in' ? z.string().optional() : z.string().max(50),\n  state: type === 'sign-in' ? z.string().optional() : z.string().min(2).max(2),\n  postalCode: type === 'sign-in' ? z.string().optional() : z.string().min(3).max(6),\n  dateOfBirth: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  ssn: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  // both\n  email: z.string().email(),\n  password: z.string().min(8),\n})\n"],"names":["Promise","resolve","then","__webpack_require__","bind","authFormSchema","components_CustomInput","control","name","label","placeholder","param","jsx_runtime","jsx","FormField","render","field","jsxs","div","className","FormLabel","FormControl","Input","type","FormMessage","components_AuthForm","router","useRouter","user","setUser","useState","isLoading","setIsLoading","error","setError","formSchema","form","useForm","resolver","zodResolver","defaultValues","email","password","onSubmit","data","response","userData","firstName","lastName","address1","city","state","postalCode","dateOfBirth","ssn","signUp","success","signIn","push","console","log","section","header","Link","href","Image","src","width","height","alt","h1","p","PlaidLink","variant","Fragment","Form","handleSubmit","CustomInput","Button","disabled","Loader2","size","role","footer","__webpack_exports__","Z","token","setToken","plaidEnabled","useMemo","isPlaidEnabled","useEffect","getLinkToken","createLinkToken","linkToken","onSuccess","useCallback","public_token","exchangePublicToken","publicToken","open","ready","usePlaidLink","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","onClick","buttonVariants","cva","variants","default","destructive","outline","secondary","ghost","link","sm","lg","icon","defaultVariants","React","ref","asChild","props","Comp","Slot","cn","displayName","labelVariants","Label","LabelPrimitive","FormProvider","FormFieldContext","Provider","value","Controller","useFormField","fieldContext","itemContext","FormItemContext","getFieldState","formState","useFormContext","fieldState","id","formItemId","concat","formDescriptionId","formMessageId","FormItem","htmlFor","aria-describedby","aria-invalid","FormDescription","children","body","String","message","input","parseFlag","defaultValue","toLowerCase","process","_len","arguments","length","inputs","_key","twMerge","clsx","formatAmount","amount","formatCurrency","currency","Intl","NumberFormat","style","format","formUrlQuery","params","key","currentUrl","qs","parse","stringifyUrl","url","window","location","pathname","query","skipNull","getAccountTypeColors","bg","lightBg","title","subText","decryptId","atob","z","optional","min","max"],"sourceRoot":""}