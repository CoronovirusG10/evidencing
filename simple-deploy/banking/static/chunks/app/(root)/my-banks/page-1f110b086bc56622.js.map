{"version":3,"file":"static/chunks/app/(root)/my-banks/page-1f110b086bc56622.js","mappings":"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","sources":["webpack://_N_E/?c8e5","webpack://_N_E/./components/Copy.tsx","webpack://_N_E/./components/ui/button.tsx","webpack://_N_E/./lib/utils.ts"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/kaveh/Horizon-bank/banking/components/Copy.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/kaveh/Horizon-bank/banking/node_modules/next/dist/client/image-component.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/kaveh/Horizon-bank/banking/node_modules/next/dist/client/link.js\");\n","\"use client\";\nimport { useState } from \"react\";\n\nimport { Button } from \"./ui/button\";\n\nconst Copy = ({ title }: { title: string }) => {\n  const [hasCopied, setHasCopied] = useState(false);\n\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(title);\n    setHasCopied(true);\n\n    setTimeout(() => {\n      setHasCopied(false);\n    }, 2000);\n  };\n\n  return (\n    <Button\n      data-state=\"closed\"\n      className=\"mt-3 flex max-w-[320px] gap-4\"\n      variant=\"secondary\"\n      onClick={copyToClipboard}\n    >\n      <p className=\"line-clamp-1 w-full max-w-full text-xs font-medium text-black-2\">\n        {title} test\n      </p>\n\n      {!hasCopied ? (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          className=\"mr-2 size-4\"\n        >\n          <rect width=\"14\" height=\"14\" x=\"8\" y=\"8\" rx=\"2\" ry=\"2\"></rect>\n          <path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path>\n        </svg>\n      ) : (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          className=\"mr-2 size-4\"\n        >\n          <polyline points=\"20 6 9 17 4 12\"></polyline>\n        </svg>\n      )}\n    </Button>\n  );\n};\n\nexport default Copy;\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","/* eslint-disable no-prototype-builtins */\nimport { type ClassValue, clsx } from \"clsx\";\nimport qs from \"query-string\";\nimport { twMerge } from \"tailwind-merge\";\nimport { z } from \"zod\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// FORMAT DATE TIME\nexport const formatDateTime = (dateString: Date) => {\n  const dateTimeOptions: Intl.DateTimeFormatOptions = {\n    weekday: \"short\", // abbreviated weekday name (e.g., 'Mon')\n    month: \"short\", // abbreviated month name (e.g., 'Oct')\n    day: \"numeric\", // numeric day of the month (e.g., '25')\n    hour: \"numeric\", // numeric hour (e.g., '8')\n    minute: \"numeric\", // numeric minute (e.g., '30')\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\n  };\n\n  const dateDayOptions: Intl.DateTimeFormatOptions = {\n    weekday: \"short\", // abbreviated weekday name (e.g., 'Mon')\n    year: \"numeric\", // numeric year (e.g., '2023')\n    month: \"2-digit\", // abbreviated month name (e.g., 'Oct')\n    day: \"2-digit\", // numeric day of the month (e.g., '25')\n  };\n\n  const dateOptions: Intl.DateTimeFormatOptions = {\n    month: \"short\", // abbreviated month name (e.g., 'Oct')\n    year: \"numeric\", // numeric year (e.g., '2023')\n    day: \"numeric\", // numeric day of the month (e.g., '25')\n  };\n\n  const timeOptions: Intl.DateTimeFormatOptions = {\n    hour: \"numeric\", // numeric hour (e.g., '8')\n    minute: \"numeric\", // numeric minute (e.g., '30')\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\n  };\n\n  const formattedDateTime: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    dateTimeOptions\n  );\n\n  const formattedDateDay: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    dateDayOptions\n  );\n\n  const formattedDate: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    dateOptions\n  );\n\n  const formattedTime: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    timeOptions\n  );\n\n  return {\n    dateTime: formattedDateTime,\n    dateDay: formattedDateDay,\n    dateOnly: formattedDate,\n    timeOnly: formattedTime,\n  };\n};\n\nexport function formatAmount(amount: number): string {\n  return formatCurrency(amount);\n}\n\nexport const parseStringify = (value: any) => JSON.parse(JSON.stringify(value));\n\nexport const formatCurrency = (value: number, currency = 'USD') => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency,\n  }).format(value);\n};\n\nexport const removeSpecialCharacters = (value: string) => {\n  return value.replace(/[^\\w\\s]/gi, \"\");\n};\n\ninterface UrlQueryParams {\n  params: string;\n  key: string;\n  value: string;\n}\n\nexport function formUrlQuery({ params, key, value }: UrlQueryParams) {\n  const currentUrl = qs.parse(params);\n\n  currentUrl[key] = value;\n\n  return qs.stringifyUrl(\n    {\n      url: window.location.pathname,\n      query: currentUrl,\n    },\n    { skipNull: true }\n  );\n}\n\nexport function getAccountTypeColors(type: AccountTypes) {\n  switch (type) {\n    case \"depository\":\n      return {\n        bg: \"bg-blue-25\",\n        lightBg: \"bg-blue-100\",\n        title: \"text-blue-900\",\n        subText: \"text-blue-700\",\n      };\n\n    case \"credit\":\n      return {\n        bg: \"bg-success-25\",\n        lightBg: \"bg-success-100\",\n        title: \"text-success-900\",\n        subText: \"text-success-700\",\n      };\n\n    default:\n      return {\n        bg: \"bg-green-25\",\n        lightBg: \"bg-green-100\",\n        title: \"text-green-900\",\n        subText: \"text-green-700\",\n      };\n  }\n}\n\nexport function countTransactionCategories(\n  transactions: Transaction[]\n): CategoryCount[] {\n  const categoryCounts: { [category: string]: number } = {};\n  let totalCount = 0;\n\n  // Iterate over each transaction\n  transactions &&\n    transactions.forEach((transaction) => {\n      // Extract the category from the transaction\n      const category = transaction.category;\n\n      // If the category exists in the categoryCounts object, increment its count\n      if (categoryCounts.hasOwnProperty(category)) {\n        categoryCounts[category]++;\n      } else {\n        // Otherwise, initialize the count to 1\n        categoryCounts[category] = 1;\n      }\n\n      // Increment total count\n      totalCount++;\n    });\n\n  // Convert the categoryCounts object to an array of objects\n  const aggregatedCategories: CategoryCount[] = Object.keys(categoryCounts).map(\n    (category) => ({\n      name: category,\n      count: categoryCounts[category],\n      totalCount,\n    })\n  );\n\n  // Sort the aggregatedCategories array by count in descending order\n  aggregatedCategories.sort((a, b) => b.count - a.count);\n\n  return aggregatedCategories;\n}\n\nexport function extractCustomerIdFromUrl(url: string) {\n  // Split the URL string by '/'\n  const parts = url.split(\"/\");\n\n  // Extract the last part, which represents the customer ID\n  const customerId = parts[parts.length - 1];\n\n  return customerId;\n}\n\nexport function encryptId(id: string) {\n  return btoa(id);\n}\n\nexport function decryptId(id: string) {\n  return atob(id);\n}\n\nexport const getTransactionStatus = (date: Date) => {\n  const today = new Date();\n  const twoDaysAgo = new Date(today);\n  twoDaysAgo.setDate(today.getDate() - 2);\n\n  return date > twoDaysAgo ? \"Processing\" : \"Success\";\n};\n\nexport const authFormSchema = (type: string) => z.object({\n  // sign up\n  firstName: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  lastName: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  address1: type === 'sign-in' ? z.string().optional() : z.string().max(50),\n  city: type === 'sign-in' ? z.string().optional() : z.string().max(50),\n  state: type === 'sign-in' ? z.string().optional() : z.string().min(2).max(2),\n  postalCode: type === 'sign-in' ? z.string().optional() : z.string().min(3).max(6),\n  dateOfBirth: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  ssn: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  // both\n  email: z.string().email(),\n  password: z.string().min(8),\n})\n"],"names":["Promise","resolve","then","__webpack_require__","bind","t","__webpack_exports__","title","param","hasCopied","setHasCopied","useState","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Button","data-state","className","variant","onClick","navigator","clipboard","writeText","setTimeout","p","jsx","svg","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","polyline","points","rect","x","y","rx","ry","path","d","buttonVariants","cva","variants","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","React","ref","asChild","props","Comp","Slot","cn","displayName","_len","arguments","length","inputs","_key","twMerge","clsx","formatAmount","amount","formatCurrency","value","currency","Intl","NumberFormat","style","format","formUrlQuery","params","key","currentUrl","qs","parse","stringifyUrl","url","window","location","pathname","query","skipNull","getAccountTypeColors","type","bg","lightBg","subText","decryptId","id","atob","authFormSchema","z","firstName","optional","min","lastName","address1","max","city","state","postalCode","dateOfBirth","ssn","email","password"],"sourceRoot":""}