{"version":3,"file":"../app/(root)/payment-transfer/page.js","mappings":"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","sources":["webpack://jsm_banking/external commonjs \"next/dist/client/components/action-async-storage.external.js\"","webpack://jsm_banking/external commonjs \"next/dist/client/components/request-async-storage.external.js\"","webpack://jsm_banking/external commonjs \"next/dist/client/components/static-generation-async-storage.external.js\"","webpack://jsm_banking/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://jsm_banking/external commonjs \"node-appwrite\"","webpack://jsm_banking/external commonjs2 \"assert\"","webpack://jsm_banking/external commonjs2 \"async_hooks\"","webpack://jsm_banking/external commonjs2 \"child_process\"","webpack://jsm_banking/external commonjs2 \"crypto\"","webpack://jsm_banking/external commonjs2 \"diagnostics_channel\"","webpack://jsm_banking/external commonjs2 \"domain\"","webpack://jsm_banking/external commonjs2 \"events\"","webpack://jsm_banking/external commonjs2 \"fs\"","webpack://jsm_banking/external commonjs2 \"http\"","webpack://jsm_banking/external commonjs2 \"https\"","webpack://jsm_banking/external commonjs2 \"inspector\"","webpack://jsm_banking/external commonjs2 \"net\"","webpack://jsm_banking/external commonjs2 \"os\"","webpack://jsm_banking/external commonjs2 \"path\"","webpack://jsm_banking/external commonjs2 \"punycode\"","webpack://jsm_banking/external commonjs2 \"stream\"","webpack://jsm_banking/external commonjs2 \"tls\"","webpack://jsm_banking/external commonjs2 \"tty\"","webpack://jsm_banking/external commonjs2 \"url\"","webpack://jsm_banking/external commonjs2 \"util\"","webpack://jsm_banking/external commonjs2 \"zlib\"","webpack://jsm_banking/app/(root)/payment-transfer/page.tsx","webpack://jsm_banking/sentry-wrapper-module","webpack://jsm_banking/?77d7","webpack://jsm_banking/?0336","webpack://jsm_banking/./components/BankDropdown.tsx","webpack://jsm_banking/./components/PaymentTransferForm.tsx","webpack://jsm_banking/./node_modules/next/dist/api/link.js"],"sourcesContent":["module.exports = require(\"next/dist/client/components/action-async-storage.external.js\");","module.exports = require(\"next/dist/client/components/request-async-storage.external.js\");","module.exports = require(\"next/dist/client/components/static-generation-async-storage.external.js\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"node-appwrite\");","module.exports = require(\"assert\");","module.exports = require(\"async_hooks\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"domain\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"inspector\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"punycode\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","import HeaderBox from '@/components/HeaderBox';\nimport PaymentTransferForm from '@/components/PaymentTransferForm';\nimport { getAccounts } from '@/lib/actions/bank.actions';\nimport { getLoggedInUser } from '@/lib/actions/user.actions';\nimport { isTransfersEnabled } from '@/lib/feature-flags';\nimport Link from 'next/link';\nimport React from 'react';\n\nconst Transfer = async () => {\n  const loggedIn = await getLoggedInUser();\n\n  if (!isTransfersEnabled()) {\n    return (\n      <section className=\"payment-transfer\">\n        <HeaderBox\n          title=\"Transfers Unavailable\"\n          subtext=\"Automated transfers are disabled for this environment.\"\n        />\n\n        <div className=\"mt-6 rounded-2xl bg-white p-6 text-sm text-gray-600 shadow-subtle\">\n          <p>\n            Dwolla-powered transfers are currently turned off. You can still track movement by recording manual transactions from the dashboard or statements page.\n          </p>\n          <p className=\"mt-4\">\n            Need to enable transfers? Update the <code>NEXT_PUBLIC_ENABLE_TRANSFERS</code> flag and redeploy. Manual entries remain available under the{' '}\n            <Link className=\"font-semibold text-brand-700\" href=\"/\">\n              dashboard\n            </Link>{' '}\n            and{' '}\n            <Link className=\"font-semibold text-brand-700\" href=\"/statements\">\n              statements\n            </Link>{' '}\n            experiences.\n          </p>\n        </div>\n      </section>\n    );\n  }\n\n  const accounts = await getAccounts({\n    userId: loggedIn.$id,\n  });\n\n  if (!accounts) return null;\n\n  const accountsData = accounts?.data;\n\n  return (\n    <section className=\"payment-transfer\">\n      <HeaderBox\n        title=\"Payment Transfer\"\n        subtext=\"Please provide any specific details or notes related to the payment transfer\"\n      />\n\n      <section className=\"size-full pt-5\">\n        <PaymentTransferForm accounts={accountsData} />\n      </section>\n    </section>\n  );\n};\n\nexport default Transfer;\n","import { _nullishCoalesce, _optionalChain } from '@sentry/utils';\nimport * as Sentry from '@sentry/nextjs';\nimport { requestAsyncStorage } from 'next/dist/client/components/request-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nconst serverComponent = serverComponentModule.default;\n\nlet wrappedServerComponent;\nif (typeof serverComponent === 'function') {\n  // For some odd Next.js magic reason, `headers()` will not work if used inside `wrapServerComponentsWithSentry`.\n  // Current assumption is that Next.js applies some loader magic to userfiles, but not files in node_modules. This file\n  // is technically a userfile so it gets the loader magic applied.\n  wrappedServerComponent = new Proxy(serverComponent, {\n    apply: (originalFunction, thisArg, args) => {\n      let sentryTraceHeader = undefined;\n      let baggageHeader = undefined;\n      let headers = undefined;\n\n      // We try-catch here just in `requestAsyncStorage` is undefined since it may not be defined\n      try {\n        const requestAsyncStore = requestAsyncStorage.getStore();\n        sentryTraceHeader = _nullishCoalesce(_optionalChain([requestAsyncStore, 'optionalAccess', _ => _.headers, 'access', _2 => _2.get, 'call', _3 => _3('sentry-trace')]), () => ( undefined));\n        baggageHeader = _nullishCoalesce(_optionalChain([requestAsyncStore, 'optionalAccess', _4 => _4.headers, 'access', _5 => _5.get, 'call', _6 => _6('baggage')]), () => ( undefined));\n        headers = _optionalChain([requestAsyncStore, 'optionalAccess', _7 => _7.headers]);\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      return Sentry.wrapServerComponentWithSentry(originalFunction , {\n        componentRoute: '/(root)/payment-transfer',\n        componentType: 'Page',\n        sentryTraceHeader,\n        baggageHeader,\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n} else {\n  wrappedServerComponent = serverComponent;\n}\n\nconst generateMetadata = serverComponentModule.generateMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateMetadata, {\n      componentRoute: '/(root)/payment-transfer',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateImageMetadata = serverComponentModule.generateImageMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateImageMetadata, {\n      componentRoute: '/(root)/payment-transfer',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateImageMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateViewport = serverComponentModule.generateViewport\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateViewport, {\n      componentRoute: '/(root)/payment-transfer',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateViewport',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst wrappedServerComponent$1 = wrappedServerComponent;\n\nexport { wrappedServerComponent$1 as default, generateImageMetadata, generateMetadata, generateViewport };\n","import \"/Users/kaveh/Horizon-bank/banking/app/(root)/payment-transfer/page.tsx\";\nimport \"/Users/kaveh/Horizon-bank/banking/app/(root)/layout.tsx\";\nimport \"next/dist/client/components/not-found-error\";\nimport \"/Users/kaveh/Horizon-bank/banking/app/layout.tsx\";\nimport \"next/dist/client/components/not-found-error\";\"TURBOPACK { transition: next-ssr }\";\nimport { AppPageRouteModule } from \"next/dist/server/future/route-modules/app-page/module.compiled\";\nimport { RouteKind } from \"next/dist/server/future/route-kind\";\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        '(root)',\n        {\n        children: [\n        'payment-transfer',\n        {\n        children: ['__PAGE__', {}, {\n          page: [() => import(/* webpackMode: \"eager\" */ \"/Users/kaveh/Horizon-bank/banking/app/(root)/payment-transfer/page.tsx\"), \"/Users/kaveh/Horizon-bank/banking/app/(root)/payment-transfer/page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [() => import(/* webpackMode: \"eager\" */ \"/Users/kaveh/Horizon-bank/banking/app/(root)/layout.tsx\"), \"/Users/kaveh/Horizon-bank/banking/app/(root)/layout.tsx\"],\n'not-found': [() => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/not-found-error\"), \"next/dist/client/components/not-found-error\"],\n        \n      }\n      ]\n      },\n        {\n        'layout': [() => import(/* webpackMode: \"eager\" */ \"/Users/kaveh/Horizon-bank/banking/app/layout.tsx\"), \"/Users/kaveh/Horizon-bank/banking/app/layout.tsx\"],\n'not-found': [() => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/not-found-error\"), \"next/dist/client/components/not-found-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"/Users/kaveh/Horizon-bank/banking/app/(root)/payment-transfer/page.tsx\"];\nexport { tree, pages };\nexport { default as GlobalError } from \"/Users/kaveh/Horizon-bank/banking/app/global-error.jsx\";\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nexport const originalPathname = \"/(root)/payment-transfer/page\";\nexport const __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\nexport * from \"next/dist/server/app-render/entry-base\";\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n    definition: {\n        kind: RouteKind.APP_PAGE,\n        page: \"/(root)/payment-transfer/page\",\n        pathname: \"/payment-transfer\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\",\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map","import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/kaveh/Horizon-bank/banking/components/PaymentTransferForm.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/kaveh/Horizon-bank/banking/node_modules/next/dist/client/link.js\");\n","\"use client\";\n\nimport Image from \"next/image\";\nimport { useSearchParams, useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\n\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n} from \"@/components/ui/select\";\nimport { formUrlQuery, formatAmount } from \"@/lib/utils\";\n\nexport const BankDropdown = ({\n  accounts = [],\n  setValue,\n  otherStyles,\n}: BankDropdownProps) => {\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const [selected, setSeclected] = useState(accounts[0]);\n\n  const handleBankChange = (id: string) => {\n    const account = accounts.find((account) => account.appwriteItemId === id)!;\n\n    setSeclected(account);\n    const newUrl = formUrlQuery({\n      params: searchParams.toString(),\n      key: \"id\",\n      value: id,\n    });\n    router.push(newUrl, { scroll: false });\n\n    if (setValue) {\n      setValue(\"senderBank\", id);\n    }\n  };\n\n  return (\n    <Select\n      defaultValue={selected.id}\n      onValueChange={(value) => handleBankChange(value)}\n    >\n      <SelectTrigger\n        className={`flex w-full bg-white gap-3 md:w-[300px] ${otherStyles}`}\n      >\n        <Image\n          src=\"icons/credit-card.svg\"\n          width={20}\n          height={20}\n          alt=\"account\"\n        />\n        <p className=\"line-clamp-1 w-full text-left\">{selected.name}</p>\n      </SelectTrigger>\n      <SelectContent\n        className={`w-full bg-white md:w-[300px] ${otherStyles}`}\n        align=\"end\"\n      >\n        <SelectGroup>\n          <SelectLabel className=\"py-2 font-normal text-gray-500\">\n            Select a bank to display\n          </SelectLabel>\n          {accounts.map((account: Account) => (\n            <SelectItem\n              key={account.id}\n              value={account.appwriteItemId}\n              className=\"cursor-pointer border-t\"\n            >\n              <div className=\"flex flex-col \">\n                <p className=\"text-16 font-medium\">{account.name}</p>\n                <p className=\"text-14 font-medium text-blue-600\">\n                  {formatAmount(account.currentBalance)}\n                </p>\n              </div>\n            </SelectItem>\n          ))}\n        </SelectGroup>\n      </SelectContent>\n    </Select>\n  );\n};\n","\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Loader2 } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\n\nimport { createTransfer } from \"@/lib/actions/dwolla.actions\";\nimport { createTransaction } from \"@/lib/actions/transaction.actions\";\nimport { getBank, getBankByAccountId } from \"@/lib/actions/user.actions\";\nimport { decryptId } from \"@/lib/utils\";\n\nimport { BankDropdown } from \"./BankDropdown\";\nimport { Button } from \"./ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"./ui/form\";\nimport { Input } from \"./ui/input\";\nimport { Textarea } from \"./ui/textarea\";\n\nconst formSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n  name: z.string().min(4, \"Transfer note is too short\"),\n  amount: z.string().min(4, \"Amount is too short\"),\n  senderBank: z.string().min(4, \"Please select a valid bank account\"),\n  sharableId: z.string().min(8, \"Please select a valid sharable Id\"),\n});\n\nconst PaymentTransferForm = ({ accounts }: PaymentTransferFormProps) => {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      amount: \"\",\n      senderBank: \"\",\n      sharableId: \"\",\n    },\n  });\n\n  const submit = async (data: z.infer<typeof formSchema>) => {\n    setIsLoading(true);\n\n    try {\n      const receiverAccountId = decryptId(data.sharableId);\n      const receiverBank = await getBankByAccountId({\n        accountId: receiverAccountId,\n      });\n      const senderBank = await getBank({ documentId: data.senderBank });\n\n      const transferParams = {\n        sourceFundingSourceUrl: senderBank.fundingSourceUrl,\n        destinationFundingSourceUrl: receiverBank.fundingSourceUrl,\n        amount: data.amount,\n      };\n      // create transfer\n      const transfer = await createTransfer(transferParams);\n\n      // create transfer transaction\n      if (transfer) {\n        const senderUserId = typeof senderBank.userId === 'string'\n          ? senderBank.userId\n          : senderBank.userId?.$id;\n        const receiverUserId = typeof receiverBank.userId === 'string'\n          ? receiverBank.userId\n          : receiverBank.userId?.$id;\n\n        const transaction = {\n          name: data.name,\n          amount: data.amount,\n          senderId: senderUserId,\n          senderBankId: senderBank.$id,\n          receiverId: receiverUserId,\n          receiverBankId: receiverBank.$id,\n          email: data.email,\n          bankId: senderBank.$id,\n          userId: senderUserId,\n          source: 'transfer' as const,\n          direction: 'debit' as const,\n          category: 'Transfer',\n          date: new Date().toISOString(),\n        };\n\n        const newTransaction = await createTransaction(transaction);\n\n        if (newTransaction) {\n          form.reset();\n          router.push(\"/\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Submitting create transfer request failed: \", error);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(submit)} className=\"flex flex-col\">\n        <FormField\n          control={form.control}\n          name=\"senderBank\"\n          render={() => (\n            <FormItem className=\"border-t border-gray-200\">\n              <div className=\"payment-transfer_form-item pb-6 pt-5\">\n                <div className=\"payment-transfer_form-content\">\n                  <FormLabel className=\"text-14 font-medium text-gray-700\">\n                    Select Source Bank\n                  </FormLabel>\n                  <FormDescription className=\"text-12 font-normal text-gray-600\">\n                    Select the bank account you want to transfer funds from\n                  </FormDescription>\n                </div>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <BankDropdown\n                      accounts={accounts}\n                      setValue={form.setValue}\n                      otherStyles=\"!w-full\"\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem className=\"border-t border-gray-200\">\n              <div className=\"payment-transfer_form-item pb-6 pt-5\">\n                <div className=\"payment-transfer_form-content\">\n                  <FormLabel className=\"text-14 font-medium text-gray-700\">\n                    Transfer Note (Optional)\n                  </FormLabel>\n                  <FormDescription className=\"text-12 font-normal text-gray-600\">\n                    Please provide any additional information or instructions\n                    related to the transfer\n                  </FormDescription>\n                </div>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Write a short note here\"\n                      className=\"input-class\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <div className=\"payment-transfer_form-details\">\n          <h2 className=\"text-18 font-semibold text-gray-900\">\n            Bank account details\n          </h2>\n          <p className=\"text-16 font-normal text-gray-600\">\n            Enter the bank account details of the recipient\n          </p>\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem className=\"border-t border-gray-200\">\n              <div className=\"payment-transfer_form-item py-5\">\n                <FormLabel className=\"text-14 w-full max-w-[280px] font-medium text-gray-700\">\n                  Recipient&apos;s Email Address\n                </FormLabel>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <Input\n                      placeholder=\"ex: johndoe@gmail.com\"\n                      className=\"input-class\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"sharableId\"\n          render={({ field }) => (\n            <FormItem className=\"border-t border-gray-200\">\n              <div className=\"payment-transfer_form-item pb-5 pt-6\">\n                <FormLabel className=\"text-14 w-full max-w-[280px] font-medium text-gray-700\">\n                  Receiver&apos;s Plaid Sharable Id\n                </FormLabel>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <Input\n                      placeholder=\"Enter the public account number\"\n                      className=\"input-class\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"amount\"\n          render={({ field }) => (\n            <FormItem className=\"border-y border-gray-200\">\n              <div className=\"payment-transfer_form-item py-5\">\n                <FormLabel className=\"text-14 w-full max-w-[280px] font-medium text-gray-700\">\n                  Amount\n                </FormLabel>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <Input\n                      placeholder=\"ex: 5.00\"\n                      className=\"input-class\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <div className=\"payment-transfer_btn-box\">\n          <Button type=\"submit\" className=\"payment-transfer_btn\">\n            {isLoading ? (\n              <>\n                <Loader2 size={20} className=\"animate-spin\" /> &nbsp; Sending...\n              </>\n            ) : (\n              \"Transfer Funds\"\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n};\n\nexport default PaymentTransferForm;\n","export { default } from \"../client/link\";\nexport * from \"../client/link\";\n\n//# sourceMappingURL=link.js.map"],"names":["module","exports","require","generateMetadata","undefined","generateImageMetadata","generateViewport","wrappedServerComponent$1","Proxy","loggedIn","getLoggedInUser","isTransfersEnabled","_jsxs","section","className","_jsx","HeaderBox","title","subtext","div","p","children","code","Link","href","accounts","getAccounts","userId","$id","accountsData","data","PaymentTransferForm","apply","originalFunction","thisArg","args","sentryTraceHeader","baggageHeader","headers","requestAsyncStore","request_async_storage_external_js_","requestAsyncStorage","getStore","_nullishCoalesce","h","_optionalChain","x","_","_2","get","_3","_4","_5","_6","_7","e","wrapServerComponentWithSentry","D","componentRoute","componentType","tree","page","Promise","resolve","then","__webpack_require__","bind","t","pages","originalPathname","__next_app__","loadChunk","routeModule","next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_4__","AppPageRouteModule","definition","kind","next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_5__","APP_PAGE","pathname","bundlePath","filename","appPaths","userland","loaderTree","BankDropdown","setValue","otherStyles","searchParams","useSearchParams","router","useRouter","selected","setSeclected","useState","handleBankChange","find","account","appwriteItemId","id","newUrl","formUrlQuery","params","toString","key","value","push","scroll","react_jsx_runtime","jsxs","Select","defaultValue","onValueChange","SelectTrigger","jsx","Image","src","width","height","alt","name","SelectContent","align","SelectGroup","SelectLabel","map","SelectItem","formatAmount","currentBalance","formSchema","z","email","min","amount","senderBank","sharableId","components_PaymentTransferForm","isLoading","setIsLoading","form","useForm","resolver","zodResolver","defaultValues","submit","receiverAccountId","decryptId","receiverBank","getBankByAccountId","accountId","getBank","documentId","transferParams","sourceFundingSourceUrl","fundingSourceUrl","destinationFundingSourceUrl","createTransfer","senderUserId","receiverUserId","transaction","senderId","senderBankId","receiverId","receiverBankId","bankId","source","direction","category","date","Date","toISOString","createTransaction","reset","error","console","Form","onSubmit","handleSubmit","FormField","control","render","FormItem","FormLabel","FormDescription","FormControl","FormMessage","field","Textarea","placeholder","h2","Input","Button","type","Fragment","Loader2","size"],"sourceRoot":""}