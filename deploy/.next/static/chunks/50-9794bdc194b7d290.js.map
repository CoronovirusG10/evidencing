{"version":3,"file":"static/chunks/50-9794bdc194b7d290.js","mappings":"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","sources":["webpack://_N_E/./components/ManualTransactionSheet.tsx","webpack://_N_E/./components/ui/sheet.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { Loader2, Plus } from \"lucide-react\";\n\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { createManualTransaction } from \"@/lib/actions/transaction.actions\";\n\nconst manualTransactionSchema = z.object({\n  bankId: z.string().min(1, \"Select a bank account\"),\n  name: z.string().min(2, \"Enter a description\"),\n  amount: z.coerce.number().positive(\"Amount must be greater than 0\"),\n  direction: z.enum([\"credit\", \"debit\"]),\n  date: z.string().min(1, \"Select a transaction date\"),\n  category: z.string().optional(),\n  notes: z.string().max(280, \"Notes must be under 280 characters\").optional(),\n});\n\ntype ManualTransactionFormValues = z.infer<typeof manualTransactionSchema>;\n\ntype ManualTransactionSheetProps = {\n  accounts: Account[];\n  defaultBankId?: string;\n};\n\nconst CATEGORY_OPTIONS = [\n  \"General\",\n  \"Dining\",\n  \"Travel\",\n  \"Housing\",\n  \"Utilities\",\n  \"Income\",\n  \"Transfer\",\n  \"Investment\",\n];\n\nconst getToday = () => new Date().toISOString().slice(0, 10);\n\nexport const ManualTransactionSheet = ({\n  accounts,\n  defaultBankId,\n}: ManualTransactionSheetProps) => {\n  const [open, setOpen] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const firstAccountId = useMemo(\n    () => defaultBankId ?? accounts[0]?.appwriteItemId ?? \"\",\n    [accounts, defaultBankId]\n  );\n\n  const form = useForm<ManualTransactionFormValues>({\n    resolver: zodResolver(manualTransactionSchema),\n    defaultValues: {\n      bankId: firstAccountId,\n      direction: \"debit\",\n      date: getToday(),\n      name: \"\",\n      amount: 0,\n      category: \"General\",\n      notes: \"\",\n    },\n  });\n\n  useEffect(() => {\n    if (!open) return;\n    if (defaultBankId) {\n      form.setValue(\"bankId\", defaultBankId);\n    }\n  }, [defaultBankId, form, open]);\n\n  const resetForm = () => {\n    form.reset({\n      bankId: firstAccountId,\n      direction: \"debit\",\n      date: getToday(),\n      name: \"\",\n      amount: 0,\n      category: \"General\",\n      notes: \"\",\n    });\n    setError(null);\n  };\n\n  const onSubmit = async (values: ManualTransactionFormValues) => {\n    setIsSubmitting(true);\n    setError(null);\n\n    try {\n      await createManualTransaction({\n        bankId: values.bankId,\n        name: values.name,\n        amount: values.amount,\n        direction: values.direction,\n        category: values.category,\n        date: values.date,\n        notes: values.notes,\n      });\n\n      resetForm();\n      setOpen(false);\n    } catch (err) {\n      console.error(err);\n      setError(\"Unable to save transaction. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const isDisabled = accounts.length === 0;\n\n  return (\n    <Sheet open={open} onOpenChange={(next) => {\n      setOpen(next);\n      if (next) {\n        resetForm();\n      }\n    }}>\n      <SheetTrigger asChild>\n        <Button className=\"flex items-center gap-2\" disabled={isDisabled} variant=\"outline\">\n          <Plus className=\"h-4 w-4\" />\n          Manual transaction\n        </Button>\n      </SheetTrigger>\n      <SheetContent className=\"flex w-full flex-col gap-6 overflow-y-auto bg-white p-6 sm:max-w-lg\">\n        <SheetHeader className=\"items-start text-left\">\n          <SheetTitle>Add manual transaction</SheetTitle>\n          <SheetDescription>\n            Record manual credits or debits for the selected account. Saved entries immediately refresh your dashboard and history.\n          </SheetDescription>\n        </SheetHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex flex-1 flex-col gap-5\">\n            <FormField\n              control={form.control}\n              name=\"bankId\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Account</FormLabel>\n                  <FormControl>\n                    <Select\n                      onValueChange={field.onChange}\n                      value={field.value}\n                      disabled={isDisabled}\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select account\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {accounts.map((account) => (\n                          <SelectItem key={account.appwriteItemId} value={account.appwriteItemId}>\n                            {account.name} • {account.mask ? `••••${account.mask}` : account.appwriteItemId.slice(-4)}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Description</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g. Office supplies\" {...field} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n              <FormField\n                control={form.control}\n                name=\"amount\"\n                render={({ field }) => {\n                  const displayValue = field.value?.toString?.() ?? \"\";\n                  return (\n                    <FormItem>\n                      <FormLabel>Amount (USD)</FormLabel>\n                      <FormControl>\n                        <Input\n                          type=\"number\"\n                          step=\"0.01\"\n                          min=\"0\"\n                          placeholder=\"0.00\"\n                          value={displayValue === \"0\" ? \"\" : displayValue}\n                          onChange={(event) => field.onChange(event.target.value)}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  );\n                }}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"direction\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Type</FormLabel>\n                    <FormControl>\n                      <Select onValueChange={field.onChange} value={field.value}>\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"debit\">Debit (money out)</SelectItem>\n                          <SelectItem value=\"credit\">Credit (money in)</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n              <FormField\n                control={form.control}\n                name=\"date\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Date</FormLabel>\n                    <FormControl>\n                      <Input type=\"date\" max={getToday()} {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"category\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Category</FormLabel>\n                    <FormControl>\n                      <Select onValueChange={field.onChange} value={field.value ?? \"General\"}>\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          {CATEGORY_OPTIONS.map((category) => (\n                            <SelectItem key={category} value={category}>\n                              {category}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            <FormField\n              control={form.control}\n              name=\"notes\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Notes</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Optional memo...\"\n                      className=\"resize-none\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {error && (\n              <p className=\"text-sm text-red-500\" role=\"alert\">\n                {error}\n              </p>\n            )}\n\n            <SheetFooter className=\"mt-auto flex w-full justify-end gap-3 sm:justify-between\">\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => {\n                  resetForm();\n                  setOpen(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <Button type=\"submit\" disabled={isSubmitting || isDisabled}>\n                {isSubmitting ? (\n                  <>\n                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                    Saving...\n                  </>\n                ) : (\n                  \"Save transaction\"\n                )}\n              </Button>\n            </SheetFooter>\n          </form>\n        </Form>\n      </SheetContent>\n    </Sheet>\n  );\n};\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":["manualTransactionSchema","z","bankId","min","name","amount","number","positive","direction","date","category","optional","notes","max","CATEGORY_OPTIONS","getToday","Date","toISOString","slice","ManualTransactionSheet","accounts","defaultBankId","param","open","setOpen","useState","isSubmitting","setIsSubmitting","error","setError","firstAccountId","useMemo","appwriteItemId","form","useForm","resolver","zodResolver","defaultValues","useEffect","setValue","resetForm","reset","onSubmit","values","createManualTransaction","err","console","isDisabled","length","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Sheet","onOpenChange","next","jsx","SheetTrigger","asChild","Button","className","disabled","variant","Plus","SheetContent","SheetHeader","SheetTitle","SheetDescription","Form","handleSubmit","FormField","control","render","field","FormItem","FormLabel","FormControl","Select","onValueChange","onChange","value","SelectTrigger","SelectValue","placeholder","SelectContent","map","SelectItem","account","mask","concat","FormMessage","Input","div","displayValue","toString","type","step","event","target","Textarea","p","role","SheetFooter","onClick","Fragment","Loader2","SheetPrimitive","SheetClose","SheetPortal","SheetOverlay","React","ref","props","cn","displayName","sheetVariants","cva","variants","side","top","bottom","left","right","defaultVariants","children","X","span"],"sourceRoot":""}