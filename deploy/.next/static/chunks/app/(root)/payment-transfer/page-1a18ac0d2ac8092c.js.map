{"version":3,"file":"static/chunks/app/(root)/payment-transfer/page-1a18ac0d2ac8092c.js","mappings":"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","sources":["webpack://_N_E/?69c7","webpack://_N_E/./components/BankDropdown.tsx","webpack://_N_E/./components/PaymentTransferForm.tsx","webpack://_N_E/./node_modules/next/dist/api/image.js","webpack://_N_E/../../../src/shared/lib/image-external.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"/Users/kaveh/Horizon-bank/banking/components/PaymentTransferForm.tsx\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/kaveh/Horizon-bank/banking/node_modules/next/dist/client/link.js\");\n","\"use client\";\n\nimport Image from \"next/image\";\nimport { useSearchParams, useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\n\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n} from \"@/components/ui/select\";\nimport { formUrlQuery, formatAmount } from \"@/lib/utils\";\n\nexport const BankDropdown = ({\n  accounts = [],\n  setValue,\n  otherStyles,\n}: BankDropdownProps) => {\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const [selected, setSeclected] = useState(accounts[0]);\n\n  const handleBankChange = (id: string) => {\n    const account = accounts.find((account) => account.appwriteItemId === id)!;\n\n    setSeclected(account);\n    const newUrl = formUrlQuery({\n      params: searchParams.toString(),\n      key: \"id\",\n      value: id,\n    });\n    router.push(newUrl, { scroll: false });\n\n    if (setValue) {\n      setValue(\"senderBank\", id);\n    }\n  };\n\n  return (\n    <Select\n      defaultValue={selected.id}\n      onValueChange={(value) => handleBankChange(value)}\n    >\n      <SelectTrigger\n        className={`flex w-full bg-white gap-3 md:w-[300px] ${otherStyles}`}\n      >\n        <Image\n          src=\"icons/credit-card.svg\"\n          width={20}\n          height={20}\n          alt=\"account\"\n        />\n        <p className=\"line-clamp-1 w-full text-left\">{selected.name}</p>\n      </SelectTrigger>\n      <SelectContent\n        className={`w-full bg-white md:w-[300px] ${otherStyles}`}\n        align=\"end\"\n      >\n        <SelectGroup>\n          <SelectLabel className=\"py-2 font-normal text-gray-500\">\n            Select a bank to display\n          </SelectLabel>\n          {accounts.map((account: Account) => (\n            <SelectItem\n              key={account.id}\n              value={account.appwriteItemId}\n              className=\"cursor-pointer border-t\"\n            >\n              <div className=\"flex flex-col \">\n                <p className=\"text-16 font-medium\">{account.name}</p>\n                <p className=\"text-14 font-medium text-blue-600\">\n                  {formatAmount(account.currentBalance)}\n                </p>\n              </div>\n            </SelectItem>\n          ))}\n        </SelectGroup>\n      </SelectContent>\n    </Select>\n  );\n};\n","\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Loader2 } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\n\nimport { createTransfer } from \"@/lib/actions/dwolla.actions\";\nimport { createTransaction } from \"@/lib/actions/transaction.actions\";\nimport { getBank, getBankByAccountId } from \"@/lib/actions/user.actions\";\nimport { decryptId } from \"@/lib/utils\";\n\nimport { BankDropdown } from \"./BankDropdown\";\nimport { Button } from \"./ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"./ui/form\";\nimport { Input } from \"./ui/input\";\nimport { Textarea } from \"./ui/textarea\";\n\nconst formSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n  name: z.string().min(4, \"Transfer note is too short\"),\n  amount: z.string().min(4, \"Amount is too short\"),\n  senderBank: z.string().min(4, \"Please select a valid bank account\"),\n  sharableId: z.string().min(8, \"Please select a valid sharable Id\"),\n});\n\nconst PaymentTransferForm = ({ accounts }: PaymentTransferFormProps) => {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      amount: \"\",\n      senderBank: \"\",\n      sharableId: \"\",\n    },\n  });\n\n  const submit = async (data: z.infer<typeof formSchema>) => {\n    setIsLoading(true);\n\n    try {\n      const receiverAccountId = decryptId(data.sharableId);\n      const receiverBank = await getBankByAccountId({\n        accountId: receiverAccountId,\n      });\n      const senderBank = await getBank({ documentId: data.senderBank });\n\n      const transferParams = {\n        sourceFundingSourceUrl: senderBank.fundingSourceUrl,\n        destinationFundingSourceUrl: receiverBank.fundingSourceUrl,\n        amount: data.amount,\n      };\n      // create transfer\n      const transfer = await createTransfer(transferParams);\n\n      // create transfer transaction\n      if (transfer) {\n        const senderUserId = typeof senderBank.userId === 'string'\n          ? senderBank.userId\n          : senderBank.userId?.$id;\n        const receiverUserId = typeof receiverBank.userId === 'string'\n          ? receiverBank.userId\n          : receiverBank.userId?.$id;\n\n        const transaction = {\n          name: data.name,\n          amount: data.amount,\n          senderId: senderUserId,\n          senderBankId: senderBank.$id,\n          receiverId: receiverUserId,\n          receiverBankId: receiverBank.$id,\n          email: data.email,\n          bankId: senderBank.$id,\n          userId: senderUserId,\n          source: 'transfer' as const,\n          direction: 'debit' as const,\n          category: 'Transfer',\n          date: new Date().toISOString(),\n        };\n\n        const newTransaction = await createTransaction(transaction);\n\n        if (newTransaction) {\n          form.reset();\n          router.push(\"/\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Submitting create transfer request failed: \", error);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(submit)} className=\"flex flex-col\">\n        <FormField\n          control={form.control}\n          name=\"senderBank\"\n          render={() => (\n            <FormItem className=\"border-t border-gray-200\">\n              <div className=\"payment-transfer_form-item pb-6 pt-5\">\n                <div className=\"payment-transfer_form-content\">\n                  <FormLabel className=\"text-14 font-medium text-gray-700\">\n                    Select Source Bank\n                  </FormLabel>\n                  <FormDescription className=\"text-12 font-normal text-gray-600\">\n                    Select the bank account you want to transfer funds from\n                  </FormDescription>\n                </div>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <BankDropdown\n                      accounts={accounts}\n                      setValue={form.setValue}\n                      otherStyles=\"!w-full\"\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem className=\"border-t border-gray-200\">\n              <div className=\"payment-transfer_form-item pb-6 pt-5\">\n                <div className=\"payment-transfer_form-content\">\n                  <FormLabel className=\"text-14 font-medium text-gray-700\">\n                    Transfer Note (Optional)\n                  </FormLabel>\n                  <FormDescription className=\"text-12 font-normal text-gray-600\">\n                    Please provide any additional information or instructions\n                    related to the transfer\n                  </FormDescription>\n                </div>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Write a short note here\"\n                      className=\"input-class\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <div className=\"payment-transfer_form-details\">\n          <h2 className=\"text-18 font-semibold text-gray-900\">\n            Bank account details\n          </h2>\n          <p className=\"text-16 font-normal text-gray-600\">\n            Enter the bank account details of the recipient\n          </p>\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem className=\"border-t border-gray-200\">\n              <div className=\"payment-transfer_form-item py-5\">\n                <FormLabel className=\"text-14 w-full max-w-[280px] font-medium text-gray-700\">\n                  Recipient&apos;s Email Address\n                </FormLabel>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <Input\n                      placeholder=\"ex: johndoe@gmail.com\"\n                      className=\"input-class\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"sharableId\"\n          render={({ field }) => (\n            <FormItem className=\"border-t border-gray-200\">\n              <div className=\"payment-transfer_form-item pb-5 pt-6\">\n                <FormLabel className=\"text-14 w-full max-w-[280px] font-medium text-gray-700\">\n                  Receiver&apos;s Plaid Sharable Id\n                </FormLabel>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <Input\n                      placeholder=\"Enter the public account number\"\n                      className=\"input-class\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"amount\"\n          render={({ field }) => (\n            <FormItem className=\"border-y border-gray-200\">\n              <div className=\"payment-transfer_form-item py-5\">\n                <FormLabel className=\"text-14 w-full max-w-[280px] font-medium text-gray-700\">\n                  Amount\n                </FormLabel>\n                <div className=\"flex w-full flex-col\">\n                  <FormControl>\n                    <Input\n                      placeholder=\"ex: 5.00\"\n                      className=\"input-class\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormMessage className=\"text-12 text-red-500\" />\n                </div>\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <div className=\"payment-transfer_btn-box\">\n          <Button type=\"submit\" className=\"payment-transfer_btn\">\n            {isLoading ? (\n              <>\n                <Loader2 size={20} className=\"animate-spin\" /> &nbsp; Sending...\n              </>\n            ) : (\n              \"Transfer Funds\"\n            )}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n};\n\nexport default PaymentTransferForm;\n","export { default } from \"../shared/lib/image-external\";\nexport * from \"../shared/lib/image-external\";\n\n//# sourceMappingURL=image.js.map"],"names":["Promise","resolve","then","__webpack_require__","bind","t","BankDropdown","accounts","setValue","otherStyles","param","searchParams","useSearchParams","router","useRouter","selected","setSeclected","useState","handleBankChange","find","account","appwriteItemId","id","newUrl","formUrlQuery","params","toString","key","value","push","scroll","jsx_runtime","jsxs","Select","defaultValue","onValueChange","SelectTrigger","className","concat","jsx","Image","src","width","height","alt","p","name","SelectContent","align","SelectGroup","SelectLabel","map","SelectItem","div","formatAmount","currentBalance","formSchema","z","email","min","amount","senderBank","sharableId","components_PaymentTransferForm","isLoading","setIsLoading","form","useForm","resolver","zodResolver","defaultValues","submit","data","receiverAccountId","decryptId","receiverBank","getBankByAccountId","accountId","getBank","documentId","transferParams","sourceFundingSourceUrl","fundingSourceUrl","destinationFundingSourceUrl","createTransfer","senderUserId","userId","$id","receiverUserId","transaction","senderId","senderBankId","receiverId","receiverBankId","bankId","source","direction","category","date","Date","toISOString","createTransaction","reset","error","console","Form","onSubmit","handleSubmit","FormField","control","render","FormItem","FormLabel","FormDescription","FormControl","FormMessage","field","Textarea","placeholder","h2","Input","Button","type","Fragment","Loader2","size","default","_default","getImageProps","imgProps","props","getImgProps","defaultLoader","imgConf","process","Object","entries","undefined"],"sourceRoot":""}